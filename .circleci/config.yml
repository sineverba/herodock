version: 2.1
jobs:
  test-unit:
    docker:
      - image: sineverba/php8xc:8.0.2

    steps:
      - checkout
      - run: composer install
      - run: vendor/bin/phpunit

  build:
    machine: true
    steps:
      - checkout
      - run: |
          docker build --tag registry.heroku.com/herodock/web \
          --file ./.deploy/app/Dockerfile "."
      - run: mkdir -p ~/docker
      - run: docker save -o ~/docker/herodock.tar registry.heroku.com/herodock/web
      - persist_to_workspace:
          root: ~/docker
          paths:
            - .

  test-docker:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/herodock.tar
      - run: docker run -d --name herodock -e "PORT=9876" -p 9876:9876 registry.heroku.com/herodock/web
      - run: docker exec -it herodock php -i | grep "PHP Version => 8.0.2"
      - run: mkdir -p ~/docker
      - run: docker save -o ~/docker/herodock.tar registry.heroku.com/herodock/web
      - persist_to_workspace:
          root: ~/docker
          paths:
            - .

  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/herodock.tar
      - run: docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
      - run: docker push registry.heroku.com/herodock/web
      - run: IMAGE_ID=$(docker inspect registry.heroku.com/herodock/web --format={{.Id}})
      - run: |
          PAYLOAD='{"updates": [{"type": "web", "docker_image": "'"$IMAGE_ID"'"}]}'
      - run: echo $IMAGE_ID
      - run: echo $(IMAGE_ID)
      - run: echo ${IMAGE_ID}
      - run: echo $PAYLOAD
      - run: echo $(PAYLOAD)
      - run: echo ${PAYLOAD}
      - run: |
          curl -n -X PATCH https://api.heroku.com/apps/herodock/formation \
          -d "${PAYLOAD}" \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -H "Authorization: Bearer ${HEROKU_API_KEY}";
      

workflows:
  version: 2
  build-deploy:
    jobs:
      - test-unit
      - build
      - test-docker:
          requires:
            - build
      - deploy:
          context:
            - HEROKU
          requires:
            - test-docker
