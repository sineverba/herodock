version: 2.1
jobs:

  test-config-var:
    machine: true
    environment:
      TAG: << pipeline.git.tag >>
    steps:
      - run: echo "Tag used was ${TAG}"
      - run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: heroku config:set TAG=${TAG} -a herodock

  test-unit:
    docker:
      - image: sineverba/php8xc:8.0.2

    steps:
      - checkout
      - run: composer install
      - run: vendor/bin/phpunit

  build:
    machine: true
    steps:
      - checkout
      - run: |
          docker build --tag registry.heroku.com/herodock/web \
          --file ./.deploy/app/Dockerfile "."
      - run: mkdir -p ~/docker
      - run: docker save -o ~/docker/herodock.tar registry.heroku.com/herodock/web
      - persist_to_workspace:
          root: ~/docker
          paths:
            - .

  test-docker:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/herodock.tar
      - run: docker run -d --name herodock -e "PORT=9876" -p 9876:9876 registry.heroku.com/herodock/web
      - run: docker exec -it herodock php -i | grep "PHP Version => 8.0.2"
      - run: mkdir -p ~/docker
      - run: docker save -o ~/docker/herodock.tar registry.heroku.com/herodock/web
      - persist_to_workspace:
          root: ~/docker
          paths:
            - .

  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/herodock.tar
      - run: docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
      - run: docker push registry.heroku.com/herodock/web
      - run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: heroku container:release web -a herodock
      

workflows:
  version: 2
  build-deploy:
    jobs:
      - test-config-var:
          context:
            - HEROKU
      #- test-unit
      #- build
      #- test-docker:
      #    requires:
      #      - build
      #- deploy:
      #    context:
      #      - HEROKU
      #    requires:
      #      - test-docker
